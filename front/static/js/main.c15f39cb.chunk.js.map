{"version":3,"sources":["store/vessels/types.ts","store/vessels/actions.ts","App.tsx","store/vessels/thunks.ts","store/vessels/reducers.ts","store/index.ts","index.tsx"],"names":["SET_VESSEL_LIST","setVesselList","vessels","type","payload","App","dispatch","useDispatch","useEffect","a","axios","get","data","useSelector","state","blackOptions","color","weight","fillRedOptions","fillOrangeOptions","fillYellowOptions","fillGreenOptions","fillBlueOptions","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","v","features","f","key","_id","value","L","latLng","geometry","coordinates","feature","visual","properties","timestampExternal","Date","now","radius","Circle","pathOptions","Tooltip","sticky","toLocaleString","line","sort","b","Polyline","positions","undefined","direction","offset","opacity","name","destination","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c15f39cb.chunk.js","sourcesContent":["export interface Geometry {\n  type: string\n  coordinates: number[]\n}\nexport interface Properties {\n  mmsi: number\n  timestampExternal: number\n}\n\nexport interface Feature {\n  _id: string\n  geometry: Geometry\n  mmsi: number\n  type: string\n  properties: Properties\n}\n\nexport interface Vessel {\n  _id: string\n  mmsi: number\n  destination: string\n  name: string\n  features: Feature[]\n}\n\nexport interface VesselState {\n  vessels: Vessel[]\n}\n\nexport const SET_VESSEL_LIST = 'SET_VESSEL_LIST';\n\ninterface SetVesselListAction {\n  type: typeof SET_VESSEL_LIST\n  payload: Vessel[]\n}\n\nexport type VesselActionTypes = SetVesselListAction;","import { SET_VESSEL_LIST, Vessel, VesselActionTypes } from './types';\n\nexport function setVesselList(vessels:Vessel[]): VesselActionTypes {\n  return {\n    type: SET_VESSEL_LIST,\n    payload: vessels\n  };\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { thunkSetVesselList } from './store/vessels/thunks';\nimport { RootState } from './store';\nimport { MapContainer, TileLayer, Circle, Polyline, Tooltip } from 'react-leaflet';\nimport './App.css';\nimport L from 'leaflet';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(thunkSetVesselList());\n  }, []);\n\n  const vessels = useSelector((state: RootState) => state.vessels.vessels);\n  // const filtered = vessels.filter(a => a.features.length < 20);\n\n  const blackOptions = { color: 'black', weight: 1 };\n\n  const fillRedOptions = { color: 'red' };\n  const fillOrangeOptions = { color: 'orange' };\n  const fillYellowOptions = { color: 'yellow' };\n  const fillGreenOptions = { color: 'green' };\n  const fillBlueOptions = { color: 'blue' };\n\n  return (\n    <>\n      <h1>Marine Traffic Tracks</h1>\n      <MapContainer center={[65.55969, 24.450072]} zoom={5} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n        />\n        {vessels.map(v => {\n          const line = v.features.map(f => { return { key: f._id, value: L.latLng(f.geometry.coordinates[1], f.geometry.coordinates[0]), feature: f }; });\n\n          return line.map(a => {\n            const visual = a.feature.properties.timestampExternal > Date.now() - (1 * 1000 * 60 * 60) ? { color: fillRedOptions, radius: 200 } :\n              a.feature.properties.timestampExternal > Date.now() - (12 * 1000 * 60 * 60) ? { color: fillOrangeOptions, radius: 150 } :\n                a.feature.properties.timestampExternal > Date.now() - (24 * 1000 * 60 * 60) ? { color: fillYellowOptions, radius: 100 } :\n                  a.feature.properties.timestampExternal > Date.now() - (48 * 1000 * 60 * 60) ? { color: fillGreenOptions, radius: 50 } :\n                    { color: fillBlueOptions, radius: 20 };\n            return (\n              <Circle key={`${a.feature._id}-circle`} center={a.value} pathOptions={visual.color} radius={visual.radius} >\n                <Tooltip sticky>{new Date(a.feature.properties.timestampExternal).toLocaleString()}</Tooltip>\n              </Circle>\n            );\n          });\n        })\n        }\n        {vessels.map(v => {\n          const line = v.features.sort((a, b) => a.properties.timestampExternal > b.properties.timestampExternal ? -1 : 1).map(f => { return L.latLng(f.geometry.coordinates[1], f.geometry.coordinates[0]); });\n          return (\n            <>\n              <Polyline key={`${v._id}-line`} pathOptions={blackOptions} positions={line} />\n              {v.features[0] !== undefined &&\n                <Circle key={`${v._id}-ship`} center={L.latLng(v.features[0].geometry.coordinates[1], v.features[0].geometry.coordinates[0])} pathOptions={blackOptions} radius={400} >\n                  <Tooltip direction=\"bottom\" offset={[0, 20]} opacity={1} >\n                    {`Name: ${v.name}`} <br />{`Destination: ${v.destination}`} <br/> {new Date(v.features[0].properties.timestampExternal).toLocaleString()}\n                  </Tooltip>\n                </Circle>\n              }\n            </>\n          );\n        })\n        }\n      </MapContainer>\n\n    </>\n  );\n};\n\nexport default App;\n","import { Action } from 'redux';\nimport { setVesselList } from './actions';\nimport { RootState } from '../';\nimport { ThunkAction } from 'redux-thunk';\nimport axios from 'axios';\nimport { Vessel } from './types';\nconst baseUrl = '/api/vessels';\n\nexport const thunkSetVesselList = (): ThunkAction<void, RootState, unknown, Action<string>> => async dispatch => {\n  const { data: vessels } = await axios.get<Vessel[]>(baseUrl);\n  dispatch(setVesselList(vessels));\n};","import { SET_VESSEL_LIST, VesselActionTypes, VesselState } from './types';\n\nconst initialState: VesselState = {\n  vessels: []\n};\n\nexport function vesselReducer(\n  state = initialState,\n  action: VesselActionTypes\n): VesselState {\n  switch (action.type) {\n    case SET_VESSEL_LIST:\n      return {\n        ...state, vessels: action.payload\n      };\n    default:\n      return state;\n  }\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { vesselReducer } from './vessels/reducers';\n\nexport const rootReducer = combineReducers({\n  vessels: vesselReducer\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\nexport type RootState = ReturnType<typeof rootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}